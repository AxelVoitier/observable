{"name":"observable","tagline":"event system for python","body":"# pyobservable\r\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/timofurrer/pyobservable?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n> observable module for python\r\n> *Version: 0.3.1*\r\n\r\n[![Build Status](https://travis-ci.org/timofurrer/pyobservable.svg)](https://travis-ci.org/timofurrer/pyobservable)\r\n\r\n***\r\n\r\n**Author:** Timo Furrer <tuxtimo@gmail.com><br />\r\n**Version:** 0.3.1<br />\r\n\r\n`pyobservable` is a module purely written in python. It is an event system - This means you can register events and trigger them somewhere else.\r\n\r\n## Supported Python versions\r\n\r\n- Python2.7\r\n- Python3.4\r\n- Python3.5\r\n\r\n## How to use\r\nImport it with the following statement in your own program\r\n\r\n```python\r\nfrom observable import Observable\r\n\r\nobs = Observable()\r\n```\r\n\r\n### `on`: Register event handler with `on`\r\nThere are two ways to register a function to an event.<br />\r\nThe first way is to register the event with a decorator like this:\r\n\r\n```python\r\n@obs.on(\"error\")\r\ndef error_func(message):\r\n    print(\"Error: %s\" % message)\r\n```\r\n\r\nThe second way is to register it with a method call:\r\n\r\n```python\r\ndef error_func(message):\r\n    print(\"Error: %s\" % message)\r\nobs.on(\"error\", error_func)\r\n```\r\n\r\n### `once`: Register event handler with `once`\r\n`once` works like `on`, but once the event handler is triggered it will be removed and cannot be triggered again.\r\n\r\n### `trigger`: trigger event\r\nYou can trigger a registered event with the `trigger` method:\r\n\r\n```python\r\nobs.trigger(\"error\", \"This is my error message\")\r\n```\r\n\r\nIf no handler for the event `error` could be found an `Observable.NoHandlerFound`-Exception will be raised.\r\n\r\n### `off`: remove handler and events\r\nRemove a handler from a specified event:\r\n\r\n```python\r\nobs.off(\"error\", error_func)\r\n```\r\n\r\n```python\r\nobs.off(\"error\", [error_func, second_error_func])\r\n```\r\n\r\nRemove all handlers from a specified event:\r\n\r\n```python\r\nobs.off(\"error\")\r\n```\r\n\r\nClear all events:\r\n\r\n```python\r\nobs.off()\r\n```\r\n\r\n## How to install\r\n\r\n### Install with PIP\r\n\r\n    pip install observable\r\n\r\n*Note: you may need root privileges to install*\r\n\r\n### Install from source\r\nJust clone this repository with:\r\n\r\n    git clone https://github.com/timofurrer/pyobservable.git\r\n\r\nand install it with:\r\n\r\n    python setup.py install\r\n\r\n*Note: you may need root privileges to execute setup.py*\r\n\r\n### with `make`\r\n\r\nWhen you have cloned the repository you can install it with\r\n\r\n    sudo make install\r\n\r\nIf you want to install just if all nose tests are passing\r\n\r\n    sudo make\r\n\r\n## Contribution\r\nFeel free to contribute!\r\n\r\n### nose tests\r\n\r\nThere are some `nose` tests in the `test/` directory. <br />\r\nIf you haven't installed `nose` yet - do it with\r\n\r\n    sudo pip install nose\r\n\r\nAfter you've `nose` installed - test `pyobservable` with:\r\n\r\n    make tests\r\n\r\nThe output should be something like:\r\n\r\n    nosetests -v\r\n    test event registering with the on decorator ... ok\r\n    test event registering with the on method ... ok\r\n    test event registering with the once decorator ... ok\r\n    test event registering with the once method ... ok\r\n    test event triggering with event registered with on ... ok\r\n    test event triggering with event registered with once ... ok\r\n    test exception raising for not existing events ... ok\r\n    test obs.off method ... ok\r\n    test exception raising in the off method ... ok\r\n    test event triggering with arguments ... ok\r\n    test event triggering with argument list ... ok\r\n    test event triggering with keyword-arguments ... ok\r\n\r\n    ----------------------------------------------------------------------\r\n    Ran 12 tests in 0.003s\r\n\r\n    OK\r\n\r\n... where just the last `OK` is important!\r\n\r\n\r\n## Inspiration\r\nWriting this module was an inspiration by https://github.com/js-coder/observable.<br /><br/>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}